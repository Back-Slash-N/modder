# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\Documents\Coding\python\GUI-launcher-for-portal-2-32PlayerMod\MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from ast import Lambda
from PyQt5 import QtCore, QtGui, QtWidgets
import webbrowser


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(795, 526)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Button_MountMod = QtWidgets.QPushButton(self.centralwidget)
        self.Button_MountMod.setGeometry(QtCore.QRect(320, 330, 141, 61))
        self.Button_MountMod.setObjectName("Button_MountMod")
        self.Label_ModStatus = QtWidgets.QLabel(self.centralwidget)
        self.Label_ModStatus.setGeometry(QtCore.QRect(310, 150, 151, 61))
        self.Label_ModStatus.setObjectName("Label_ModStatus")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 795, 21))
        self.menubar.setObjectName("menubar")
        self.menuSettings_2 = QtWidgets.QMenu(self.menubar)
        self.menuSettings_2.setObjectName("menuSettings_2")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionGuide = QtWidgets.QAction(MainWindow)
        self.actionGuide.setObjectName("actionGuide")
        self.actionCheck_for_update = QtWidgets.QAction(MainWindow)
        self.actionCheck_for_update.setObjectName("actionCheck_for_update")
        self.actionSettings = QtWidgets.QAction(MainWindow)
        self.actionSettings.setObjectName("actionSettings")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.menuSettings_2.addAction(self.actionSettings)
        self.menuHelp.addAction(self.actionGuide)
        self.menuHelp.addAction(self.actionCheck_for_update)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionAbout)
        self.menubar.addAction(self.menuSettings_2.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        self.actionGuide.triggered.connect(lambda: self.OpenGuide())

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Button_MountMod.setText(_translate("MainWindow", "Mount mod"))
        self.Label_ModStatus.setText(_translate("MainWindow", "not mounted"))
        self.menuSettings_2.setTitle(_translate("MainWindow", "Options"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionGuide.setText(_translate("MainWindow", "Guide"))
        self.actionGuide.setStatusTip(_translate("MainWindow", "opens the browser to show a guide on how to set up"))
        self.actionCheck_for_update.setText(_translate("MainWindow", "Check for update"))
        self.actionCheck_for_update.setStatusTip(_translate("MainWindow", "checks for updates for the mod"))
        self.actionSettings.setText(_translate("MainWindow", "Settings"))
        self.actionSettings.setStatusTip(_translate("MainWindow", "opens the settings menu"))
        self.actionAbout.setText(_translate("MainWindow", "About"))

    def OpenGuide(self):
        guideURL = "https://steamcommunity.com/sharedfiles/filedetails/?id=2458260280"
        webbrowser.open(guideURL)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
